// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package eventmanagement.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the EventManagement module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_EventInformation_OpenBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.ACT_EventInformation_Open");
		return builder;
	}

	public static void aCT_EventInformation_Open(IContext context)
	{
		aCT_EventInformation_OpenBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Registration_FinishSignUpForTicketsBuilder(
		eventmanagement.proxies.Registration _registration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.ACT_Registration_FinishSignUpForTickets");
		builder = builder.withParam("Registration", _registration);
		return builder;
	}

	public static void aCT_Registration_FinishSignUpForTickets(
		IContext context,
		eventmanagement.proxies.Registration _registration
	)
	{
		aCT_Registration_FinishSignUpForTicketsBuilder(
				_registration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Registration_StartSignUpBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.ACT_Registration_StartSignUp");
		return builder;
	}

	public static void aCT_Registration_StartSignUp(IContext context)
	{
		aCT_Registration_StartSignUpBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ViewNewsletterBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.ACT_ViewNewsletter");
		return builder;
	}

	public static void aCT_ViewNewsletter(IContext context)
	{
		aCT_ViewNewsletterBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder bCO_ProgramItemBuilder(
		eventmanagement.proxies.ProgramItem _programItem
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.BCO_ProgramItem");
		builder = builder.withParam("ProgramItem", _programItem);
		return builder;
	}

	public static boolean bCO_ProgramItem(
		IContext context,
		eventmanagement.proxies.ProgramItem _programItem
	)
	{
		Object result = bCO_ProgramItemBuilder(
				_programItem
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sCE_Newsletter_SendBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.SCE_Newsletter_Send");
		return builder;
	}

	public static void sCE_Newsletter_Send(IContext context)
	{
		sCE_Newsletter_SendBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Email_CreateBuilder(
		eventmanagement.proxies.Newsletter _newsletter,
		eventmanagement.proxies.Visitor _visitor
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.SUB_Email_Create");
		builder = builder.withParam("Newsletter", _newsletter);
		builder = builder.withParam("Visitor", _visitor);
		return builder;
	}

	public static eventmanagement.proxies.Email sUB_Email_Create(
		IContext context,
		eventmanagement.proxies.Newsletter _newsletter,
		eventmanagement.proxies.Visitor _visitor
	)
	{
		Object result = sUB_Email_CreateBuilder(
				_newsletter,
				_visitor
			)
			.execute(context);
		return result == null ? null : eventmanagement.proxies.Email.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Email_CreateAndSendBuilder(
		eventmanagement.proxies.Newsletter _newsletter
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.SUB_Email_CreateAndSend");
		builder = builder.withParam("Newsletter", _newsletter);
		return builder;
	}

	public static void sUB_Email_CreateAndSend(
		IContext context,
		eventmanagement.proxies.Newsletter _newsletter
	)
	{
		sUB_Email_CreateAndSendBuilder(
				_newsletter
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Email_SendBuilder(
		eventmanagement.proxies.Email _email
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.SUB_Email_Send");
		builder = builder.withParam("Email", _email);
		return builder;
	}

	public static void sUB_Email_Send(
		IContext context,
		eventmanagement.proxies.Email _email
	)
	{
		sUB_Email_SendBuilder(
				_email
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_ProgramItem_DependenciesBuilder(
		eventmanagement.proxies.ProgramItem _programItem
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.VAL_ProgramItem_Dependencies");
		builder = builder.withParam("ProgramItem", _programItem);
		return builder;
	}

	public static boolean vAL_ProgramItem_Dependencies(
		IContext context,
		eventmanagement.proxies.ProgramItem _programItem
	)
	{
		Object result = vAL_ProgramItem_DependenciesBuilder(
				_programItem
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_ProgramItem_RequiredInfoBuilder(
		eventmanagement.proxies.ProgramItem _programItem
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.VAL_ProgramItem_RequiredInfo");
		builder = builder.withParam("ProgramItem", _programItem);
		return builder;
	}

	public static boolean vAL_ProgramItem_RequiredInfo(
		IContext context,
		eventmanagement.proxies.ProgramItem _programItem
	)
	{
		Object result = vAL_ProgramItem_RequiredInfoBuilder(
				_programItem
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_RegistrationBuilder(
		eventmanagement.proxies.Registration _registration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.VAL_Registration");
		builder = builder.withParam("Registration", _registration);
		return builder;
	}

	public static boolean vAL_Registration(
		IContext context,
		eventmanagement.proxies.Registration _registration
	)
	{
		Object result = vAL_RegistrationBuilder(
				_registration
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_Registration_DependenciesBuilder(
		eventmanagement.proxies.Registration _registration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.VAL_Registration_Dependencies");
		builder = builder.withParam("Registration", _registration);
		return builder;
	}

	public static boolean vAL_Registration_Dependencies(
		IContext context,
		eventmanagement.proxies.Registration _registration
	)
	{
		Object result = vAL_Registration_DependenciesBuilder(
				_registration
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_RegistrationRequirementsBuilder(
		eventmanagement.proxies.Registration _registration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.VAL_RegistrationRequirements");
		builder = builder.withParam("Registration", _registration);
		return builder;
	}

	public static boolean vAL_RegistrationRequirements(
		IContext context,
		eventmanagement.proxies.Registration _registration
	)
	{
		Object result = vAL_RegistrationRequirementsBuilder(
				_registration
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_TicketBuilder(
		eventmanagement.proxies.Ticket _ticket
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("EventManagement.VAL_Ticket");
		builder = builder.withParam("Ticket", _ticket);
		return builder;
	}

	public static boolean vAL_Ticket(
		IContext context,
		eventmanagement.proxies.Ticket _ticket
	)
	{
		Object result = vAL_TicketBuilder(
				_ticket
			)
			.execute(context);
		return (boolean) result;
	}
}
