// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package eventmanagement.proxies;

public class Ticket implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject ticketMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EventManagement.Ticket";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Description("Description"),
		Price("Price"),
		NumberOfDays("NumberOfDays"),
		Ticket_Day("EventManagement.Ticket_Day");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Ticket(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Ticket(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject ticketMendixObject)
	{
		if (ticketMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, ticketMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.ticketMendixObject = ticketMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static eventmanagement.proxies.Ticket initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new eventmanagement.proxies.Ticket(context, mendixObject);
	}

	public static eventmanagement.proxies.Ticket load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return eventmanagement.proxies.Ticket.initialize(context, mendixObject);
	}

	public static java.util.List<eventmanagement.proxies.Ticket> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> eventmanagement.proxies.Ticket.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of Price
	 */
	public final java.math.BigDecimal getPrice()
	{
		return getPrice(getContext());
	}

	/**
	 * @param context
	 * @return value of Price
	 */
	public final java.math.BigDecimal getPrice(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Price.toString());
	}

	/**
	 * Set value of Price
	 * @param price
	 */
	public final void setPrice(java.math.BigDecimal price)
	{
		setPrice(getContext(), price);
	}

	/**
	 * Set value of Price
	 * @param context
	 * @param price
	 */
	public final void setPrice(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal price)
	{
		getMendixObject().setValue(context, MemberNames.Price.toString(), price);
	}

	/**
	 * Get value of NumberOfDays
	 * @param numberofdays
	 */
	public final eventmanagement.proxies.ENU_NumberOfDays getNumberOfDays()
	{
		return getNumberOfDays(getContext());
	}

	/**
	 * @param context
	 * @return value of NumberOfDays
	 */
	public final eventmanagement.proxies.ENU_NumberOfDays getNumberOfDays(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.NumberOfDays.toString());
		if (obj == null) {
			return null;
		}
		return eventmanagement.proxies.ENU_NumberOfDays.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of NumberOfDays
	 * @param numberofdays
	 */
	public final void setNumberOfDays(eventmanagement.proxies.ENU_NumberOfDays numberofdays)
	{
		setNumberOfDays(getContext(), numberofdays);
	}

	/**
	 * Set value of NumberOfDays
	 * @param context
	 * @param numberofdays
	 */
	public final void setNumberOfDays(com.mendix.systemwideinterfaces.core.IContext context, eventmanagement.proxies.ENU_NumberOfDays numberofdays)
	{
		if (numberofdays != null) {
			getMendixObject().setValue(context, MemberNames.NumberOfDays.toString(), numberofdays.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.NumberOfDays.toString(), null);
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Ticket_Day
	 */
	public final java.util.List<eventmanagement.proxies.Day> getTicket_Day() throws com.mendix.core.CoreException
	{
		return getTicket_Day(getContext());
	}

	/**
	 * @param context
	 * @return value of Ticket_Day
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<eventmanagement.proxies.Day> getTicket_Day(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<eventmanagement.proxies.Day> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Ticket_Day.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(eventmanagement.proxies.Day.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of Ticket_Day
	 * @param ticket_day
	 */
	public final void setTicket_Day(java.util.List<eventmanagement.proxies.Day> ticket_day)
	{
		setTicket_Day(getContext(), ticket_day);
	}

	/**
	 * Set value of Ticket_Day
	 * @param context
	 * @param ticket_day
	 */
	public final void setTicket_Day(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<eventmanagement.proxies.Day> ticket_day)
	{
		var identifiers = ticket_day
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.Ticket_Day.toString(), identifiers);
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return ticketMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final eventmanagement.proxies.Ticket that = (eventmanagement.proxies.Ticket) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
